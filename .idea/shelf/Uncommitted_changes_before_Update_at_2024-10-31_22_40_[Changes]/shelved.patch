Index: RogueLikeMavenBuild/src/main/java/rougelike/NonPlayableCharacter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package rougelike;\r\n\r\nimport java.util.*;\r\n\r\npublic class NonPlayableCharacter extends GameCharacter {\r\n    private final HashMap<String, String> dialogues;\r\n    private final HashMap<String, List<String>> randomDialogues = new HashMap<>();\r\n\r\n    public NonPlayableCharacter(String name, Race race) {\r\n        super(name, race);\r\n        this.dialogues = new HashMap<>();\r\n\r\n        addDialogue(\"What is your strength?\", \"My strength is \" + getStrength() + \".\");\r\n        addDialogue(\"What is your speed?\", \"My speed is \" + getSpeed() + \".\");\r\n        addDialogue(\"What is your stamina?\", \"My stamina is \" + getStamina() + \".\");\r\n        addDialogue(\"What is your health?\", \"My health is \" + getHealth() + \".\");\r\n        addDialogue(\"What is your level?\", \"I am level \" + getLevel() + \".\");\r\n    }\r\n\r\n    private String getHealthResponse() {\r\n        if (getHealth() > 50) {\r\n            return \"I feel strong and healthy!\";\r\n        }\r\n        return \"I feel a bit weak...\";\r\n    }\r\n\r\n    public HashMap<String, String> getDialogues() {\r\n        return dialogues;\r\n    }\r\n\r\n    public void addDialogue(String prompt, String reply) {\r\n        dialogues.put(prompt, reply);\r\n    }\r\n\r\n    public String getReply(String prompt) {\r\n        if (prompt.equals(\"How are you feeling?\")) {\r\n            return getHealthResponse();\r\n        }\r\n        return dialogues.getOrDefault(prompt, \"I don't quite understand...\");\r\n    }\r\n\r\n    public void addRandomDialogue(String prompt, String... replies) {\r\n        randomDialogues.putIfAbsent(prompt, new ArrayList<>());\r\n        randomDialogues.get(prompt).addAll(Arrays.asList(replies));\r\n    }\r\n\r\n    public String getRandomReply(String prompt) {\r\n        List<String> replies = randomDialogues.get(prompt);\r\n        return (replies != null && !replies.isEmpty()) ? replies.get(new Random().nextInt(replies.size())) : \"I don't really understand...\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RogueLikeMavenBuild/src/main/java/rougelike/NonPlayableCharacter.java b/RogueLikeMavenBuild/src/main/java/rougelike/NonPlayableCharacter.java
--- a/RogueLikeMavenBuild/src/main/java/rougelike/NonPlayableCharacter.java	(revision 9b2b05e8373a801099e1fdd29901d77aefa1c724)
+++ b/RogueLikeMavenBuild/src/main/java/rougelike/NonPlayableCharacter.java	(date 1730409935810)
@@ -36,7 +36,7 @@
         if (prompt.equals("How are you feeling?")) {
             return getHealthResponse();
         }
-        return dialogues.getOrDefault(prompt, "I don't quite understand...");
+        return dialogues.getOrDefault(prompt, "I don't know about that.");
     }
 
     public void addRandomDialogue(String prompt, String... replies) {
Index: RogueLikeMavenBuild/src/test/java/RaceClassTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import rougelike.Race;\r\nimport rougelike.races.*;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.util.Set;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\n// Testar de olika metoderna som Rasklassen inneh√•ller\r\npublic class RaceClassTest {\r\n    @Test\r\n    public void testGetHealthModifier() {\r\n        Race testHuman = new Human();\r\n        assertEquals(testHuman.getHealthModifier(), 1);\r\n    }\r\n\r\n    @Test\r\n    public void testGetStaminaModifier() {\r\n        Race testElf = new Elf();\r\n        assertEquals(testElf.getStaminaModifier(), 2);\r\n    }\r\n\r\n    @Test\r\n    public void testGetSpeedModifier() {\r\n        Race testDwarf = new Dwarf();\r\n        assertEquals(testDwarf.getSpeedModifier(), 0.75);\r\n    }\r\n\r\n    @Test\r\n    public void testGetStrengthModifier() {\r\n        Race testGiant = new Giant();\r\n        assertEquals(testGiant.getStrengthModifier(), 2);\r\n    }\r\n\r\n    @Test\r\n    public void testGetMagicModifier() {\r\n        Race testAngel = new Angel();\r\n        assertEquals(testAngel.getMagicModifier(), 2);\r\n    }\r\n    @Test\r\n    public void testCharacterType() {\r\n        Race Angel = new Angel();\r\n        assertTrue(Angel.getCharacterType().containsAll(Set.of(\"walk\", \"fly\")), \"Angel should be able to walk and fly\");\r\n        Race testHuman = new Human();\r\n        assertTrue(testHuman.getCharacterType().containsAll(Set.of(\"walk\", \"swim\")), \"Human should be able to to walk and swim\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RogueLikeMavenBuild/src/test/java/RaceClassTest.java b/RogueLikeMavenBuild/src/test/java/RaceClassTest.java
--- a/RogueLikeMavenBuild/src/test/java/RaceClassTest.java	(revision 9b2b05e8373a801099e1fdd29901d77aefa1c724)
+++ b/RogueLikeMavenBuild/src/test/java/RaceClassTest.java	(date 1730391910347)
@@ -45,3 +45,4 @@
         assertTrue(testHuman.getCharacterType().containsAll(Set.of("walk", "swim")), "Human should be able to to walk and swim");
     }
 }
+
